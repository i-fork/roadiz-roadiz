<?php
declare(strict_types=1);

use RZ\Roadiz\Core\Kernel;
// use RZ\Roadiz\Core\DevKernel;
use RZ\Roadiz\Core\HttpFoundation\Request;
use Symfony\Component\Dotenv\Dotenv;
use Symfony\Component\ErrorHandler\Debug;

if (PHP_VERSION_ID < 70400) {
    echo 'Your PHP version is ' . phpversion() . "." . PHP_EOL;
    echo 'You need a least PHP version 7.4.0.' . PHP_EOL;
    exit(1);
}

$allowedIp = [
    '10.0.2.2',     // vagrant host (forwarded)
    '192.168.33.1', // vagrant host (private)
    '127.0.0.1', 'fe80::1', '::1', ':ffff:127.0.0.1', '::ffff:127.0.0.1' // localhost
];

// This check prevents access to debug front controllers that are deployed by accident to production servers.
// Feel free to remove this, extend it, or make something more sophisticated.
if (isset($_SERVER['HTTP_CLIENT_IP'])
    || isset($_SERVER['HTTP_X_FORWARDED_FOR'])
    || !(in_array(@$_SERVER['REMOTE_ADDR'], $allowedIp) || php_sapi_name() === 'cli-server')
) {
    header('HTTP/1.0 403 Forbidden');
    exit('You are not allowed to access this file ('.$_SERVER['REMOTE_ADDR'].'). Check '.basename(__FILE__).' for more information.');
}
/** @deprecated Use Kernel::getProjectDir()  */
define('ROADIZ_ROOT', dirname(__FILE__));
// Include Composer Autoload (relative to project root).
require("vendor/autoload.php");

Debug::enable();

// Use DevKernel on Vagrant box to use a cache dir not
// in the shared folder.
//$kernel = new DevKernel('dev', true, false, 'my_site');

$kernel = new Kernel('dev', true, false);
$dotenv = new Dotenv();
$dotenv->load($kernel->getProjectDir() . '/.env');
$request = Request::createFromGlobals();

$response = $kernel->handle($request);
$response->send();
$kernel->terminate($request, $response);
